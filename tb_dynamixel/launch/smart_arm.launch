<?xml version="1.0"?>
<launch>

    <group ns="dynamixel">

    <!-- Start the Dynamixel motor manager to control all SmartArm servos -->
    <node name="smartarm_motor_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: smartarm_motor_manager
            diagnostics_rate: 10
            serial_ports:
                smart_arm:
                    port_name: "/dev/ttyUSB4"
                    baud_rate: 250000
                    min_motor_id: 1
                    max_motor_id: 11
                    update_rate: 50
        </rosparam>
    </node>

    <!-- Load joint controller configuration from YAML file to parameter server -->
    <rosparam file="$(find tb_dynamixel)/config/smart_arm_safe.yaml" command="load"/>

    <!-- Start all SmartArm joint controllers -->
    <node name="smartarm_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=smartarm_motor_manager
                --port=smart_arm
                --type=simple
                shoulder_pan_controller
                shoulder_pitch_controller
                elbow_flex_controller
                wrist_roll_controller
                right_finger_controller
                kinect_controller"
          output="screen"/>
          
          
   <node pkg="tb_dynamixel" type="kinect_servo.py" name="kinect_servo" output="screen" respawn="false"/>
   
   <rosparam file="$(find tb_dynamixel)/config/dynamixel_joints.yaml" command="load"/>
   
   <!-- node which can read and publish state of dynamixel joints -->
   <node name="dynamixel_joint_states_publisher" pkg="tb_dynamixel" type="joint_state_publisher.py" output="screen">
    <param name="rate" type="double" value="50"/>
   </node>
   
   </group>
   
   <!-- high level controller with action interface -->
   <!--include file="$(find tb_manipulator)/launch/joint_trajectory_action.launch" /-->
    
</launch>
